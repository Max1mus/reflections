-How did viewing a diff between two versions of a file help you see the bug that was introduced?
It only compared and showed the lines that were different in two files, since these are the only lines we are interested in.

-How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
In case you break the code, instead of solving the problem all over again you can look back and see what the working file looked like.

-What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
Pros: Commit only when logical change is made. Easier to understand.
Cons: You might forget to commit a change.

-Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Different purpose of files.

-How can you use the commands git log and git diff to view the history of files?
git log allows to see all commits, and git diff allows to see changes from one commit to another.

-How might using version control make you more confident to make changes that could break something?
You can always undo the change it if breaks your project

-Now that you have your workspace set up, what do you want to try using Git for?
Save android projects and experiment with them. Save college work.